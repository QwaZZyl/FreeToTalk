apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.karavatskiy.serhii.freetotalkchat"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Support
    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support:design:$supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    // Logging interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"
    implementation "com.squareup.okhttp3:okhttp:$loggingInterceptor"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"

    //Retrolambda
    implementation "me.tatarka:gradle-retrolambda:$retrolambda"

    //Room
    implementation "android.arch.persistence.room:runtime:$room"
    annotationProcessor "android.arch.persistence.room:compiler:$room"
    implementation "android.arch.persistence.room:rxjava2:$room"

    //Dagger
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"

    //Butterknife
    implementation "com.jakewharton:butterknife:$butterKnife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnife"

    //Firebase auth
    implementation("com.google.firebase:firebase-auth:$firebaseAuth") {
        exclude group: "com.android.support"
    }

    //Google auth
    implementation("com.google.android.gms:play-services-auth:$googleAuth") {
        exclude group: "com.android.support"
    }

    //Facebook auth
    implementation("com.facebook.android:facebook-login:$facebookAuth") {
        exclude group: "com.android.support"
    }

    //views buttons
    implementation "com.rilixtech:materialfancybuttons:$materialfancybuttons"

    apply plugin: "com.google.gms.google-services"

    // Tests
    //Jupiter
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter"

    //Espresso
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso", {
        exclude group: "com.android.support", module: "support-annotations"
    })

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-android:$mockito"
}
